---
# Pre-pull Kubernetess images
- name: Pull K8s images
  become: true
  shell: kubeadm config images pull

# Possibly add - allow full access from workers via firewalld

# Allow firewalld access from containers to localhost
# Default docker network is 172.17.0.0/16
- name: Allow access from containers to localhost
  firewalld:
    rich_rule: 'rule family="ipv4" source address="172.17.0.0/16" accept'
    permanent: true
    state: enabled

# Reset kubeadm - otherwise next task fails on re-run
- name: Reset kubeadm
  shell: kubeadm reset -f

# Initialize master and make sure initialization completes
- name: initialize the cluster control-plane
  shell: kubeadm init --pod-network-cidr=192.169.0.0/16
  register: result
  until: result.stdout.find("Your Kubernetes control-plane has initialized successfully!") != -1
  retries: 3
  delay: 30

# Enable root to use kubectl
- name: Enable root to use kubectl
  shell: export KUBECONFIG=/etc/kubernetes/admin.conf

# Authorize root user for cluster access
- name: create .kube directory
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755

- name: copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes
    owner: root

# Register join command
- name: Get join command on master
  shell: kubeadm token create --print-join-command
  register: join_command_raw

- name: Set join command
  set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }}"

