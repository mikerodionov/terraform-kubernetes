---
- name: Mount NFS share
  become: yes
  become_method: sudo
  shell: mount -t nfs4 10.0.1.13:/mnt/nfs_share /mnt/nfs_share

# Pre-pull Kubernetess images
- name: Pull K8s images
  become: true
  shell: kubeadm config images pull

# Possibly add - allow full access from workers via firewalld

# Allow firewalld access from containers to localhost
# Default docker network is 172.17.0.0/16
- name: Allow access from containers to localhost
  firewalld:
    rich_rule: 'rule family="ipv4" source address="10.244.0.0/16" accept'
    permanent: true
    state: enabled

# Reset kubeadm - otherwise next task fails on re-run
- name: Reset kubeadm
  shell: kubeadm reset -f

# Initialize master and make sure initialization completes
- name: initialize the cluster control-plane
  # For Calico
  # shell: kubeadm init --pod-network-cidr=192.169.0.0/16
  shell: sudo kubeadm init --pod-network-cidr=10.244.0.0/16
  register: result
  until: result.stdout.find("Your Kubernetes control-plane has initialized successfully!") != -1
  retries: 3
  delay: 30

# Enable root to use kubectl
- name: Enable root to use kubectl
  shell: export KUBECONFIG=/etc/kubernetes/admin.conf

# Authorize root user for cluster access
- name: create .kube directory
  file:
    path: $HOME/.kube
    state: directory
    mode: 0755

- name: copy admin.conf to user's kube config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: $HOME/.kube/config
    remote_src: yes
    owner: root

# Register join command
- name: Get join command on master
  shell: kubeadm token create --print-join-command
  register: join_command_raw

- name: Set join command
  set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }}"

# Install Calico SDN to enable PODs communication
# This plugin worked well testing with VirtualBox
# When not installed all nodes will have Not ready status with respective error
# To verify:
# kubectl get nodes
# kubectl describe nodes
# - name: Download calico.yaml
#   shell: wget https://docs.projectcalico.org/v3.8/manifests/calico.yaml

# - name: Install Calico SDN
#   shell: kubectl apply -f calico.yaml

- name: Download kube-flannel.yml
  shell: wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: Install Flannel CDN
  shell: kubectl apply -f kube-flannel.yml


# Exposing this properly requires reverse proxy and more work
# Create rbac.yml
#- name: Create rbac.yml
#  copy:
#    dest: "$HOME/rbac.yaml"
#    content: |
#      apiVersion: rbac.authorization.k8s.io/v1
#      kind: ClusterRoleBinding
#      metadata:
#        name: default-rbac
#      subjects:
#      - kind: ServiceAccount
#        name: default
#        namespace: default
#      roleRef:
#        kind: ClusterRole
#        name: cluster-admin
#        apiGroup: rbac.authorization.k8s.io

# Configure Kubernetes dashboard
#- name: Configure Kubernetes dashboard
#  shell: |
#    kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
#    helm init
#    kubectl apply -f rbac.yaml
#    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml
#    kubectl create clusterrolebinding kubernetes-dashboard --clusterrole=cluster-admin --serviceaccount=kube-system:kubernetes-dashboard